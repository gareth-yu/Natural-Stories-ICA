plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
library(mvtnorm)
set.seed(11)
numWords <- 1000
numPeople <- 100
component1 <- rnorm(numWords, mean = 0, sd = 1)
component2 <- rnorm(numWords, mean = 0, sd = 1)
individual <- rnorm(numPeople, mean = 0, sd = 1)
error <- matrix(rnorm(numWords*numPeople, mean = 0, sd = 1), nrow = numWords, ncol = numPeople)
beta0 <- 1
betaInd <- 1
betaC1 <- 2
betaC2 <- 3
covariance_matrix <- matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
multipliers <- rmvnorm(numPeople, sigma = covariance_matrix, mean = c(betaC1, betaC2))
fake_data <- matrix(0, nrow = numWords, ncol = numPeople)
for (i in seq_len(numPeople)) {
for (j in seq_len(numWords)) {
fake_data[j, i] <- beta0 + multipliers[i, 1]*component1[j] + multipliers[i, 2]*component2[j] + betaInd*individual[i]
}
}
fake_data <- fake_data + error
write.csv(fake_data, "~/Documents/GitHub/Natural-Stories-ICA/ICA/fake_data.csv")
write.csv(multipliers, "~/Documents/GitHub/Natural-Stories-ICA/ICA/multipliers.csv")
write.csv(cbind(component1, component2), "~/Documents/GitHub/Natural-Stories-ICA/ICA/components.csv")
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
View(Coef)
View(Basis)
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
View(Basis)
set.seed(12)
numWords <- 1000
numPeople <- 100
component1 <- rnorm(numWords, mean = 0, sd = 1)
component2 <- rnorm(numWords, mean = 0, sd = 1)
individual <- rnorm(numPeople, mean = 0, sd = 1)
error <- matrix(rnorm(numWords*numPeople, mean = 0, sd = 1), nrow = numWords, ncol = numPeople)
beta0 <- 1
betaInd <- 1
betaC1 <- 2
betaC2 <- 3
covariance_matrix <- matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
multipliers <- rmvnorm(numPeople, sigma = covariance_matrix, mean = c(betaC1, betaC2))
fake_data <- matrix(0, nrow = numWords, ncol = numPeople)
for (i in seq_len(numPeople)) {
for (j in seq_len(numWords)) {
fake_data[j, i] <- beta0 + multipliers[i, 1]*component1[j] + multipliers[i, 2]*component2[j] + betaInd*individual[i]
}
}
fake_data <- fake_data + error
write.csv(fake_data, "~/Documents/GitHub/Natural-Stories-ICA/ICA/fake_data.csv")
write.csv(multipliers, "~/Documents/GitHub/Natural-Stories-ICA/ICA/multipliers.csv")
write.csv(cbind(component1, component2), "~/Documents/GitHub/Natural-Stories-ICA/ICA/components.csv")
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
reticulate::repl_python()
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
# Compare retrieved components
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
View(Coef)
fake_data[1,1]
View(Coef)
plot(nn_component1[1:50]*mean(Coef(1820)), type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component1[1:50]*1820), type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component1[1:50]*1820, type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue')
lines(Basis[1:50, 1]*1820, type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1]*1820, type = 'l', col = 'red')
View(Coef)
View(Components)
View(Coef)
View(covariance_matrix)
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
# Compare retrieved components
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1]*1000, type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1]*1000, type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2]*6, type = 'l', col = 'red')
lines(Basis[1:100, 2]*5, type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2]*5, type = 'l', col = 'red')
# Compare retrieved components
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
library(mvtnorm)
set.seed(10)
numWords <- 1000
numPeople <- 100
component1 <- rnorm(numWords, mean = 0, sd = 1)
component2 <- rnorm(numWords, mean = 0, sd = 1)
individual <- rnorm(numPeople, mean = 0, sd = 1)
error <- matrix(rnorm(numWords*numPeople, mean = 0, sd = 1), nrow = numWords, ncol = numPeople)
beta0 <- 1
betaInd <- 1
betaC1 <- 2
betaC2 <- 3
covariance_matrix <- matrix(c(1, 0, 0, 1), nrow = 2, ncol = 2)
multipliers <- rmvnorm(numPeople, sigma = covariance_matrix, mean = c(betaC1, betaC2))
fake_data <- matrix(0, nrow = numWords, ncol = numPeople)
for (i in seq_len(numPeople)) {
for (j in seq_len(numWords)) {
fake_data[j, i] <- beta0 + multipliers[i, 1]*component1[j] + multipliers[i, 2]*component2[j] + betaInd*individual[i]
}
}
fake_data <- fake_data + error
write.csv(fake_data, "~/Documents/GitHub/Natural-Stories-ICA/ICA/fake_data.csv")
write.csv(multipliers, "~/Documents/GitHub/Natural-Stories-ICA/ICA/multipliers.csv")
write.csv(cbind(component1, component2), "~/Documents/GitHub/Natural-Stories-ICA/ICA/components.csv")
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
reticulate::repl_python()
Components <- read.csv("components.csv")
Basis <- read.csv("basis.csv", header = FALSE)
Coef <- read.csv("coef.csv", header = FALSE)
nn_component1 <- component1 - min(component1)
nn_component2 <- component2 - min(component2)
plot(nn_component1[1:50], type = 'l', col = 'blue', ylim = c(0,6))
lines(Basis[1:50, 1], type = 'l', col = 'red')
plot(nn_component2[1:100], type = 'l', col = 'blue', ylim = c(0, 6))
lines(Basis[1:100, 2], type = 'l', col = 'red')
